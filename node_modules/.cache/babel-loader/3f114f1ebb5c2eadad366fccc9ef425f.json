{"ast":null,"code":"var _jsxFileName = \"/Users/seth/Desktop/watch-store-react/src/context.js\";\nimport React, { Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\nconst ProductContext = React.createContext(); //Provider\n//Consumer\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: storeProducts,\n      detailProduct,\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubtotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = { ...item\n        };\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      });\n    };\n\n    this.getItemById = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItemById(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItemById(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      const count = product.count += 1;\n      const price = product.price;\n      product.total = price * product.count;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItemById(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      }, () => {\n        console.log(this.state);\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increment = id => {\n      const tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItemById(id));\n      const item = tempProducts[index];\n      item.count += 1;\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.decrement = id => {\n      const tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItemById(id));\n      const item = tempProducts[index];\n      item.count -= 1;\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      }, () => {\n        this.addTotals;\n      });\n    };\n\n    this.removeFromCart = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(item => item.id !== id);\n      const index = tempProducts.indexOf(this.getItemById(id));\n      let removedProduct = tempProducts[index];\n      removedProduct.inCart = false;\n      removedProduct.count = 0;\n      removedProduct.total = 0;\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProducts]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n        this.addTotals();\n      });\n    };\n\n    this.addTotals = () => {\n      let subTotal = 0;\n      this.state.cart.map(item => {\n        subTotal += item.total;\n      });\n      const tempTax = subTotal * 0.1025;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubtotal: subTotal.toFixed(2),\n          cartTax: tax.toFixed(2),\n          cartTotal: total.toFixed(2)\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return React.createElement(ProductContext.Provider, {\n      value: { ...this.state,\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeFromCart: this.removeFromCart,\n        clearCart: this.clearCart\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/Users/seth/Desktop/watch-store-react/src/context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","modalOpen","modalProduct","cartSubtotal","cartTax","cartTotal","setProducts","tempProducts","forEach","item","singleItem","setState","getItemById","id","product","find","handleDetail","addToCart","index","indexOf","inCart","count","price","total","addTotals","openModal","console","log","closeModal","increment","decrement","removeFromCart","tempCart","filter","removedProduct","clearCart","subTotal","map","tempTax","tax","parseFloat","toFixed","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,aAAR,EAAuBC,aAAvB,QAA2C,QAA3C;AAEA,MAAMC,cAAc,GAAGJ,KAAK,CAACK,aAAN,EAAvB,C,CACA;AACA;;AAGA,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACpCM,KADoC,GAC5B;AACJC,MAAAA,QAAQ,EAAEN,aADN;AAEJC,MAAAA,aAFI;AAGJM,MAAAA,IAAI,EAAE,EAHF;AAIJC,MAAAA,SAAS,EAAE,KAJP;AAKJC,MAAAA,YAAY,EAAER,aALV;AAMJS,MAAAA,YAAY,EAAE,CANV;AAOJC,MAAAA,OAAO,EAAE,CAPL;AAQJC,MAAAA,SAAS,EAAE;AARP,KAD4B;;AAAA,SAgBpCC,WAhBoC,GAgBtB,MAAM;AAChB,UAAIC,YAAY,GAAG,EAAnB;AACAd,MAAAA,aAAa,CAACe,OAAd,CAAsBC,IAAI,IAAI;AAC1B,cAAMC,UAAU,GAAG,EAAC,GAAGD;AAAJ,SAAnB;AACAF,QAAAA,YAAY,GAAG,CAAC,GAAGA,YAAJ,EAAkBG,UAAlB,CAAf;AACH,OAHD;AAIA,WAAKC,QAAL,CAAc,MAAM;AAChB,eAAO;AAACZ,UAAAA,QAAQ,EAAEQ;AAAX,SAAP;AACH,OAFD;AAGH,KAzBmC;;AAAA,SA2BpCK,WA3BoC,GA2BrBC,EAAD,IAAQ;AAClB,YAAMC,OAAO,GAAG,KAAKhB,KAAL,CAAWC,QAAX,CAAoBgB,IAApB,CAAyBN,IAAI,IAAIA,IAAI,CAACI,EAAL,KAAYA,EAA7C,CAAhB;AACA,aAAOC,OAAP;AACH,KA9BmC;;AAAA,SAgCpCE,YAhCoC,GAgCpBH,EAAD,IAAQ;AACnB,YAAMC,OAAO,GAAG,KAAKF,WAAL,CAAiBC,EAAjB,CAAhB;AACA,WAAKF,QAAL,CAAc,MAAM;AAChB,eAAO;AAACjB,UAAAA,aAAa,EAAEoB;AAAhB,SAAP;AACH,OAFD;AAGH,KArCmC;;AAAA,SAuCpCG,SAvCoC,GAuCvBJ,EAAD,IAAQ;AAChB,UAAIN,YAAY,GAAG,CAAC,GAAG,KAAKT,KAAL,CAAWC,QAAf,CAAnB;AACA,YAAMmB,KAAK,GAAGX,YAAY,CAACY,OAAb,CAAqB,KAAKP,WAAL,CAAiBC,EAAjB,CAArB,CAAd;AACA,YAAMC,OAAO,GAAGP,YAAY,CAACW,KAAD,CAA5B;AACAJ,MAAAA,OAAO,CAACM,MAAR,GAAiB,IAAjB;AACA,YAAMC,KAAK,GAAGP,OAAO,CAACO,KAAR,IAAiB,CAA/B;AACA,YAAMC,KAAK,GAAGR,OAAO,CAACQ,KAAtB;AACAR,MAAAA,OAAO,CAACS,KAAR,GAAgBD,KAAK,GAAGR,OAAO,CAACO,KAAhC;AAEA,WAAKV,QAAL,CACI,MAAM;AACF,eAAO;AACHZ,UAAAA,QAAQ,EAAEQ,YADP;AACqBP,UAAAA,IAAI,EAAE,CAAC,GAAG,KAAKF,KAAL,CAAWE,IAAf,EAAqBc,OAArB;AAD3B,SAAP;AAGH,OALL,EAMI,MAAM;AACF,aAAKU,SAAL;AACH,OARL;AAUH,KA1DmC;;AAAA,SA4DpCC,SA5DoC,GA4DvBZ,EAAD,IAAQ;AAChB,YAAMC,OAAO,GAAG,KAAKF,WAAL,CAAiBC,EAAjB,CAAhB;AACA,WAAKF,QAAL,CACI,MAAM;AACF,eAAO;AACHT,UAAAA,YAAY,EAAEY,OADX;AAEHb,UAAAA,SAAS,EAAE;AAFR,SAAP;AAIH,OANL,EAOI,MAAM;AACFyB,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAK7B,KAAjB;AACH,OATL;AAWH,KAzEmC;;AAAA,SA2EpC8B,UA3EoC,GA2EvB,MAAM;AACf,WAAKjB,QAAL,CACI,MAAM;AACF,eAAO;AACHV,UAAAA,SAAS,EAAE;AADR,SAAP;AAGH,OALL;AAOH,KAnFmC;;AAAA,SAqFpC4B,SArFoC,GAqFvBhB,EAAD,IAAQ;AAChB,YAAMN,YAAY,GAAG,CAAC,GAAG,KAAKT,KAAL,CAAWC,QAAf,CAArB;AACA,YAAMmB,KAAK,GAAGX,YAAY,CAACY,OAAb,CAAqB,KAAKP,WAAL,CAAiBC,EAAjB,CAArB,CAAd;AACA,YAAMJ,IAAI,GAAGF,YAAY,CAACW,KAAD,CAAzB;AACAT,MAAAA,IAAI,CAACY,KAAL,IAAc,CAAd;AACA,WAAKV,QAAL,CAAc,MAAM;AAChB,eAAO;AACHZ,UAAAA,QAAQ,EAAEQ;AADP,SAAP;AAGH,OAJD,EAIG,MAAM;AACL,aAAKiB,SAAL;AACH,OAND;AAOH,KAjGmC;;AAAA,SAmGpCM,SAnGoC,GAmGvBjB,EAAD,IAAQ;AAChB,YAAMN,YAAY,GAAG,CAAC,GAAG,KAAKT,KAAL,CAAWC,QAAf,CAArB;AACA,YAAMmB,KAAK,GAAGX,YAAY,CAACY,OAAb,CAAqB,KAAKP,WAAL,CAAiBC,EAAjB,CAArB,CAAd;AACA,YAAMJ,IAAI,GAAGF,YAAY,CAACW,KAAD,CAAzB;AACAT,MAAAA,IAAI,CAACY,KAAL,IAAc,CAAd;AACA,WAAKV,QAAL,CAAc,MAAM;AAChB,eAAO;AACHZ,UAAAA,QAAQ,EAAEQ;AADP,SAAP;AAGH,OAJD,EAIG,MAAM;AACL,aAAKiB,SAAL;AACH,OAND;AAOH,KA/GmC;;AAAA,SAiHpCO,cAjHoC,GAiHlBlB,EAAD,IAAQ;AACrB,UAAIN,YAAY,GAAG,CAAC,GAAG,KAAKT,KAAL,CAAWC,QAAf,CAAnB;AACA,UAAIiC,QAAQ,GAAG,CAAC,GAAG,KAAKlC,KAAL,CAAWE,IAAf,CAAf;AAEAgC,MAAAA,QAAQ,GAAGA,QAAQ,CAACC,MAAT,CAAiBxB,IAAI,IAAIA,IAAI,CAACI,EAAL,KAAYA,EAArC,CAAX;AAEA,YAAMK,KAAK,GAAGX,YAAY,CAACY,OAAb,CAAqB,KAAKP,WAAL,CAAiBC,EAAjB,CAArB,CAAd;AACA,UAAIqB,cAAc,GAAG3B,YAAY,CAACW,KAAD,CAAjC;AACAgB,MAAAA,cAAc,CAACd,MAAf,GAAwB,KAAxB;AACAc,MAAAA,cAAc,CAACb,KAAf,GAAuB,CAAvB;AACAa,MAAAA,cAAc,CAACX,KAAf,GAAuB,CAAvB;AAEA,WAAKZ,QAAL,CAAc,MAAM;AAChB,eAAO;AACHX,UAAAA,IAAI,EAAE,CAAC,GAAGgC,QAAJ,CADH;AAEHjC,UAAAA,QAAQ,EAAE,CAAC,GAAGQ,YAAJ;AAFP,SAAP;AAIH,OALD,EAKG,MAAM;AACL,aAAKiB,SAAL;AACH,OAPD;AAQH,KArImC;;AAAA,SAuIpCW,SAvIoC,GAuIxB,MAAM;AACd,WAAKxB,QAAL,CAAc,MAAK;AACf,eAAO;AACHX,UAAAA,IAAI,EAAE;AADH,SAAP;AAGH,OAJD,EAIG,MAAK;AACJ,aAAKM,WAAL;AACA,aAAKkB,SAAL;AACH,OAPD;AAQH,KAhJmC;;AAAA,SAkJpCA,SAlJoC,GAkJxB,MAAM;AACd,UAAIY,QAAQ,GAAG,CAAf;AACA,WAAKtC,KAAL,CAAWE,IAAX,CAAgBqC,GAAhB,CAAqB5B,IAAI,IAAI;AACzB2B,QAAAA,QAAQ,IAAI3B,IAAI,CAACc,KAAjB;AACH,OAFD;AAGA,YAAMe,OAAO,GAAGF,QAAQ,GAAG,MAA3B;AACA,YAAMG,GAAG,GAAGC,UAAU,CAACF,OAAO,CAACG,OAAR,CAAgB,CAAhB,CAAD,CAAtB;AACA,YAAMlB,KAAK,GAAGa,QAAQ,GAAGG,GAAzB;AACA,WAAK5B,QAAL,CAAc,MAAM;AAChB,eAAO;AACHR,UAAAA,YAAY,EAAEiC,QAAQ,CAACK,OAAT,CAAiB,CAAjB,CADX;AAEHrC,UAAAA,OAAO,EAAEmC,GAAG,CAACE,OAAJ,CAAY,CAAZ,CAFN;AAGHpC,UAAAA,SAAS,EAAEkB,KAAK,CAACkB,OAAN,CAAc,CAAd;AAHR,SAAP;AAKH,OAND;AAOH,KAjKmC;AAAA;;AAYpCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKpC,WAAL;AACH;;AAqJDqC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,MAAA,KAAK,EAAE,EAC5B,GAAG,KAAK7C,KADoB;AAE5BkB,QAAAA,YAAY,EAAE,KAAKA,YAFS;AAG5BC,QAAAA,SAAS,EAAE,KAAKA,SAHY;AAI5BQ,QAAAA,SAAS,EAAE,KAAKA,SAJY;AAK5BG,QAAAA,UAAU,EAAE,KAAKA,UALW;AAM5BC,QAAAA,SAAS,EAAE,KAAKA,SANY;AAO5BC,QAAAA,SAAS,EAAE,KAAKA,SAPY;AAQ5BC,QAAAA,cAAc,EAAE,KAAKA,cARO;AAS5BI,QAAAA,SAAS,EAAE,KAAKA;AATY,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWK,KAAKS,KAAL,CAAWC,QAXhB,CADJ;AAeH;;AAnLmC;;AAsLxC,MAAMC,eAAe,GAAGnD,cAAc,CAACoD,QAAvC;AAEA,SAAOlD,eAAP,EAAwBiD,eAAxB","sourcesContent":["import React, { Component } from 'react'\nimport {storeProducts, detailProduct} from './data';\n\nconst ProductContext = React.createContext();\n//Provider\n//Consumer\n\n\nclass ProductProvider extends Component {\n    state = {\n        products: storeProducts,\n        detailProduct,\n        cart: [],\n        modalOpen: false,\n        modalProduct: detailProduct,\n        cartSubtotal: 0,\n        cartTax: 0,\n        cartTotal: 0\n    };\n\n    componentDidMount() {\n        this.setProducts();\n    }\n    \n    setProducts = () => {\n        let tempProducts = [];\n        storeProducts.forEach(item => {\n            const singleItem = {...item};\n            tempProducts = [...tempProducts, singleItem];\n        });\n        this.setState(() => {\n            return {products: tempProducts}\n        });\n    };\n\n    getItemById = (id) => {\n        const product = this.state.products.find(item => item.id === id);\n        return product;\n    };\n\n    handleDetail = (id) => {\n        const product = this.getItemById(id);\n        this.setState(() => {\n            return {detailProduct: product};\n        });\n    };\n\n    addToCart = (id) => {\n        let tempProducts = [...this.state.products];\n        const index = tempProducts.indexOf(this.getItemById(id));\n        const product = tempProducts[index];\n        product.inCart = true;\n        const count = product.count += 1;\n        const price = product.price;\n        product.total = price * product.count;\n\n        this.setState(\n            () => {\n                return { \n                    products: tempProducts, cart: [...this.state.cart, product] \n                };\n            }, \n            () => {\n                this.addTotals();\n            }\n        );\n    };\n\n    openModal = (id) => {\n        const product = this.getItemById(id);\n        this.setState(\n            () => {\n                return {\n                    modalProduct: product,\n                    modalOpen: true\n                };\n            },\n            () => {\n                console.log(this.state);\n            }\n        );\n    };\n\n    closeModal = () => {\n        this.setState(\n            () => {\n                return {\n                    modalOpen: false\n                }\n            }\n        );\n    };\n\n    increment = (id) => {\n        const tempProducts = [...this.state.products];\n        const index = tempProducts.indexOf(this.getItemById(id));\n        const item = tempProducts[index];\n        item.count += 1;\n        this.setState(() => {\n            return {\n                products: tempProducts\n            }\n        }, () => {\n            this.addTotals();\n        });\n    };\n\n    decrement = (id) => {\n        const tempProducts = [...this.state.products];\n        const index = tempProducts.indexOf(this.getItemById(id));\n        const item = tempProducts[index];\n        item.count -= 1;\n        this.setState(() => {\n            return {\n                products: tempProducts\n            }\n        }, () => {\n            this.addTotals\n        });\n    };\n\n    removeFromCart = (id) => {\n        let tempProducts = [...this.state.products];\n        let tempCart = [...this.state.cart];\n\n        tempCart = tempCart.filter( item => item.id !== id);\n\n        const index = tempProducts.indexOf(this.getItemById(id));\n        let removedProduct = tempProducts[index];\n        removedProduct.inCart = false;\n        removedProduct.count = 0;\n        removedProduct.total = 0;\n\n        this.setState(() => {\n            return {\n                cart: [...tempCart],\n                products: [...tempProducts]\n            }\n        }, () => {\n            this.addTotals();\n        });\n    };\n\n    clearCart = () => {\n        this.setState(()=> {\n            return {\n                cart: [],\n            }\n        }, ()=> {\n            this.setProducts();\n            this.addTotals();\n        });\n    };\n\n    addTotals = () => {\n        let subTotal = 0;\n        this.state.cart.map( item => {\n            subTotal += item.total\n        });\n        const tempTax = subTotal * 0.1025;\n        const tax = parseFloat(tempTax.toFixed(2));\n        const total = subTotal + tax;\n        this.setState(() => {\n            return {\n                cartSubtotal: subTotal.toFixed(2),\n                cartTax: tax.toFixed(2),\n                cartTotal: total.toFixed(2)\n            };\n        });\n    }\n\n    render() {\n        return (\n            <ProductContext.Provider value={{\n                ...this.state,\n                handleDetail: this.handleDetail,\n                addToCart: this.addToCart,\n                openModal: this.openModal,\n                closeModal: this.closeModal,\n                increment: this.increment,\n                decrement: this.decrement,\n                removeFromCart: this.removeFromCart,\n                clearCart: this.clearCart\n            }}>\n                {this.props.children}\n            </ProductContext.Provider>\n        )\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport{ProductProvider, ProductConsumer};\n"]},"metadata":{},"sourceType":"module"}